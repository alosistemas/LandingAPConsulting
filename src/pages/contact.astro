---
import MainLayout from "@layouts/MainLayout.astro";

const title = "Contacto | AP Consulting";
const description =
  "Contáctanos para transformar tus ideas en soluciones de valor.";
---

<MainLayout {title} {description}>
  <section class="max-w-2xl mx-auto px-4 py-12 text-gray-800">
    <div class="mb-6">
      <button
        id="back-button"
        type="button"
        class="inline-flex items-center px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition"
      >
        ← Volver
      </button>
    </div>
    <h1 class="text-3xl font-bold mb-6">Contáctanos</h1>

    <form
      id="contact-form"
      class="space-y-5"
      action="https://formspree.io/f/xvganydr"
      method="POST"
      novalidate
    >
      <div>
        <label for="name" class="block text-sm font-semibold mb-1">Nombre</label
        >
        <input
          type="text"
          id="name"
          name="name"
          required
          class="w-full border border-gray-300 rounded px-3 py-2"
          aria-describedby="error-name"
        />
        <p id="error-name" class="text-red-600 text-sm mt-1 hidden">
          Por favor ingresa tu nombre.
        </p>
      </div>

      <div>
        <label for="email" class="block text-sm font-semibold mb-1"
          >Correo electrónico</label
        >
        <input
          type="email"
          id="email"
          name="email"
          required
          class="w-full border border-gray-300 rounded px-3 py-2"
          aria-describedby="error-email"
        />
        <p id="error-email" class="text-red-600 text-sm mt-1 hidden">
          Por favor ingresa un correo válido.
        </p>
      </div>

      <div>
        <label for="subject" class="block text-sm font-semibold mb-1"
          >Asunto</label
        >
        <input
          type="text"
          id="subject"
          name="subject"
          required
          class="w-full border border-gray-300 rounded px-3 py-2"
          aria-describedby="error-subject"
        />
        <p id="error-subject" class="text-red-600 text-sm mt-1 hidden">
          Por favor ingresa el asunto.
        </p>
      </div>

      <div>
        <label for="message" class="block text-sm font-semibold mb-1"
          >Mensaje</label
        >
        <textarea
          id="message"
          name="message"
          rows="5"
          required
          class="w-full border border-gray-300 rounded px-3 py-2"
          aria-describedby="error-message"></textarea>
        <p id="error-message" class="text-red-600 text-sm mt-1 hidden">
          Por favor ingresa un mensaje.
        </p>
      </div>

      <button
        type="submit"
        class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors"
      >
        Enviar mensaje
      </button>

      <p
        id="success-message"
        class="mt-4 text-green-600 font-semibold hidden"
        role="alert"
      >
        ¡Mensaje enviado con éxito! Gracias por contactarnos.
      </p>
    </form>

    <div class="mt-10">
      <h2 class="text-xl font-semibold mb-2">Información de contacto</h2>
      <p><strong>Teléfono:</strong> +56 956 609 914</p>
      <p>
        <strong>Correo:</strong>
        <a
          href="mailto:jose.arana@ap-consulting.cl"
          class="text-blue-600 underline">jose.arana@ap-consulting.cl</a
        >
      </p>
    </div>
  </section>
  <script>
    const buttons = document.querySelectorAll("button#back-button");

    buttons.forEach((button) => {
      button.addEventListener("click", () => {
        history.back();
      });
    });

    const form = document.getElementById("contact-form") as HTMLFormElement;

    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      // Ocultar mensajes de error previos
      document.getElementById("error-name")?.classList.add("hidden");
      document.getElementById("error-email")?.classList.add("hidden");
      document.getElementById("error-subject")?.classList.add("hidden");
      document.getElementById("error-message")?.classList.add("hidden");
      document.getElementById("success-message")?.classList.add("hidden");

      const formData = new FormData(form);

      // Validaciones manuales
      let hasError = false;

      const name = formData.get("name")?.toString();
      const namePattern = /^[A-Za-zÁÉÍÓÚáéíóúÑñ\s]+$/;
      
      if (!name || name.trim() === "" || !namePattern.test(name)) {
        document.getElementById("error-name")?.classList.remove("hidden");
        hasError = true;
      }

      const email = formData.get("email")?.toString();
      // Validar email simple
      const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!email || !emailPattern.test(email)) {
        document.getElementById("error-email")?.classList.remove("hidden");
        hasError = true;
      }

      const subject = formData.get("subject")?.toString();
      if (!subject || subject.trim() === "") {
        document.getElementById("error-subject")?.classList.remove("hidden");
        hasError = true;
      }

      const message = formData.get("message")?.toString();
      if (!message || message.trim() === "") {
        document.getElementById("error-message")?.classList.remove("hidden");
        hasError = true;
      }

      if (hasError) return;

      try {
        const response = await fetch(form.action, {
          method: form.method,
          headers: {
            Accept: "application/json",
          },
          body: formData,
        });

        if (response.ok) {
          form.reset();
          document
            .getElementById("success-message")
            ?.classList.remove("hidden");
        } else {
          alert("Hubo un error al enviar el mensaje. Intenta nuevamente.");
        }
      } catch (error) {
        alert("Error de red al enviar el formulario.");
      }
    });
  </script>
</MainLayout>
